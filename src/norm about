import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const SectionTitle = ({ children }) => (
  <h2 className="text-5xl font-thin mb-12 relative inline-block p-4">
    {children}
    <span className="absolute top-0 left-0 w-full h-0.5 bg-gradient-to-r from-blue-400 to-purple-400 animate-border-top"></span>
    <span className="absolute top-0 right-0 w-0.5 h-full bg-gradient-to-b from-purple-400 to-blue-400 animate-border-right"></span>
    <span className="absolute bottom-0 right-0 w-full h-0.5 bg-gradient-to-l from-blue-400 to-purple-400 animate-border-bottom"></span>
    <span className="absolute bottom-0 left-0 w-0.5 h-full bg-gradient-to-t from-purple-400 to-blue-400 animate-border-left"></span>
  </h2>
);

const AboutMeSection = ({ timelineEvents, fadeIn }) => {
  const [currentEventIndex, setCurrentEventIndex] = useState(0);

  const handleTimelineClick = (index) => {
    setCurrentEventIndex(index);
  };

  const handleNavigation = (direction) => {
    const newIndex = currentEventIndex + direction;
    if (newIndex >= 0 && newIndex < timelineEvents.length) {
      setCurrentEventIndex(newIndex);
    }
  };

  const variants = {
    enter: { opacity: 0 },
    center: { opacity: 1 },
    exit: { opacity: 0 },
  };

  return (
    <motion.section 
      id="about" 
      className="py-4 mt-4 flex flex-col items-center"
      variants={fadeIn}
      initial="hidden"
      whileInView="visible"
      viewport={{ once: true, amount: 0.3 }}
    >
      <div className="text-center mb-12">
        <SectionTitle>About Me</SectionTitle>
      </div>
      <div className="flex flex-col md:flex-row justify-center items-center space-y-6 md:space-y-0 md:space-x-8 w-full max-w-5xl">
        <motion.div 
          className="w-full md:w-2/5"
          variants={fadeIn}
        >
          <div className="timeline relative">
            {timelineEvents.map((event, index) => (
              <motion.div 
                key={event.year} 
                className={`timeline-event cursor-pointer ${index === currentEventIndex ? 'active' : ''}`}
                onClick={() => handleTimelineClick(index)}
                whileHover={{ scale: 1.05 }}
                transition={{ type: "spring", stiffness: 300 }}
              >
                <div className="timeline-content">
                  <div className="timeline-year">{event.year}</div>
                  <div className="timeline-title">{event.title}</div>
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>
        <motion.div 
          className="w-full md:w-3/5 flex items-center justify-center"
          variants={fadeIn}
        >
          <div className="relative w-full">
            <button 
              onClick={() => handleNavigation(-1)} 
              className={`absolute left-0 top-1/2 transform -translate-y-1/2 p-2 text-gray-600 transition-all duration-300 z-10 ${currentEventIndex === 0 ? 'opacity-30 pointer-events-none' : 'hover:text-gray-900'}`}
              disabled={currentEventIndex === 0}
            >
              <ChevronLeft size={24} />
            </button>
            <div className="snippet-container bg-white bg-opacity-70 p-8 rounded-lg shadow-lg min-h-[200px] overflow-hidden">
              <AnimatePresence mode="wait">
                <motion.div
                  key={currentEventIndex}
                  variants={variants}
                  initial="enter"
                  animate="center"
                  exit="exit"
                  transition={{
                    opacity: { duration: 0.5 }
                  }}
                  className="text-center absolute w-full left-0 right-0 px-8"
                >
                  <h3 className="text-2xl font-bold mb-4">{timelineEvents[currentEventIndex].title}</h3>
                  <p className="text-gray-700 text-lg">{timelineEvents[currentEventIndex].description}</p>
                </motion.div>
              </AnimatePresence>
            </div>
            <button 
              onClick={() => handleNavigation(1)} 
              className={`absolute right-0 top-1/2 transform -translate-y-1/2 p-2 text-gray-600 transition-all duration-300 z-10 ${currentEventIndex === timelineEvents.length - 1 ? 'opacity-30 pointer-events-none' : 'hover:text-gray-900'}`}
              disabled={currentEventIndex === timelineEvents.length - 1}
            >
              <ChevronRight size={24} />
            </button>
          </div>
        </motion.div>
      </div>
    </motion.section>
  );
};

export default AboutMeSection;